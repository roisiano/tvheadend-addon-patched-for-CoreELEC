diff --git a/configure b/configure
--- a/configure
+++ b/configure
@@ -761,6 +761,14 @@ if enabled_or_auto tvhcsa; then
        check_cc_lib    dvbcsa dvbcsa_l) ||\
       die "Failed to find dvbcsa library"
       LDFLAGS="$LDFLAGS -ldvbcsa"
+      check_cc '
+      #include <dvbcsa/dvbcsa.h>
+      int test(void)
+      {
+        dvbcsa_bs_key_set_ecm;
+        return 0;
+      }
+      ' && CFLAGS="$CFLAGS -DDVBCSA_KEY_ECM=1" && printf "    ^ dvbcsa new\n"
     fi
   else
     disable tvhcsa
diff --git a/src/descrambler/tvhcsa.c b/src/descrambler/tvhcsa.c
--- a/src/descrambler/tvhcsa.c
+++ b/src/descrambler/tvhcsa.c
@@ -20,9 +20,6 @@
 #include <stdlib.h>
 #include <unistd.h>
 #include <assert.h>
-#define _GNU_SOURCE
-#define __USE_GNU
-#include <dlfcn.h>
 
 #include "tvhcsa.h"
 #include "input.h"
@@ -32,10 +29,6 @@
 #include "descrambler/algo/libaes128dec.h"
 #include "descrambler/algo/libdesdec.h"
 
-#if ENABLE_DVBCSA
-static int dvbcsa_dl_scanned;
-static dvbcsa_dl_bs_key_set_type dvbcsa_dl_bs_key_set_ecm;
-#endif
 
 static void
 tvhcsa_empty_flush
@@ -232,7 +225,7 @@ void tvhcsa_set_key_even( tvhcsa_t *csa, const uint8_t *even )
   switch (csa->csa_type) {
   case DESCRAMBLER_CSA_CBC:
 #if ENABLE_DVBCSA
-    dvbcsa_bs_key_set_wrap(csa->csa_ecm, even, csa->csa_key_even);
+    dvbcsa_bs_key_set(even, csa->csa_key_even);
 #endif
     break;
   case DESCRAMBLER_DES_NCB:
@@ -254,7 +247,7 @@ void tvhcsa_set_key_odd( tvhcsa_t *csa, const uint8_t *odd )
   switch (csa->csa_type) {
   case DESCRAMBLER_CSA_CBC:
 #if ENABLE_DVBCSA
-    dvbcsa_bs_key_set_wrap(csa->csa_ecm, odd, csa->csa_key_odd);
+    dvbcsa_bs_key_set(odd, csa->csa_key_odd);
 #endif
     break;
   case DESCRAMBLER_DES_NCB:
@@ -274,19 +267,6 @@ void tvhcsa_set_key_odd( tvhcsa_t *csa, const uint8_t *odd )
 void
 tvhcsa_init ( tvhcsa_t *csa )
 {
-#if ENABLE_DVBCSA
-  if (!dvbcsa_dl_scanned)
-  {
-    dvbcsa_dl_scanned++;
-#if defined RTLD_DEFAULT
-    dvbcsa_dl_bs_key_set_ecm = (dvbcsa_dl_bs_key_set_type) dlsym(RTLD_DEFAULT, "dvbcsa_bs_key_set_ecm");
-    tvhinfo(LS_DESCRAMBLER, "dvbcsa_bs_key_set_ecm() function%s detected in libdvbcsa", dvbcsa_dl_bs_key_set_ecm ? "" : " not");
-#else
-    dvbcsa_dl_bs_key_set_ecm = (dvbcsa_dl_bs_key_set_type) NULL;
-    tvhinfo(LS_DESCRAMBLER, "can not detect dvbcsa_bs_key_set_ecm() function: RTLD_DEFAULT not defined on this system");
-#endif
-  }
-#endif
   csa->csa_type          = 0;
   csa->csa_keylen        = 0;
 }
@@ -325,14 +305,3 @@ tvhcsa_destroy ( tvhcsa_t *csa )
   }
   memset(csa, 0, sizeof(*csa));
 }
-
-#if ENABLE_DVBCSA
-void
-dvbcsa_bs_key_set_wrap(const unsigned char ecm, const dvbcsa_cw_t cw, struct dvbcsa_bs_key_s *key)
-{
-  if (dvbcsa_dl_bs_key_set_ecm)
-    dvbcsa_dl_bs_key_set_ecm(ecm, cw, key);
-  else
-    dvbcsa_bs_key_set(cw, key);
-}
-#endif
diff --git a/src/descrambler/tvhcsa.h b/src/descrambler/tvhcsa.h
--- a/src/descrambler/tvhcsa.h
+++ b/src/descrambler/tvhcsa.h
@@ -26,6 +26,9 @@ struct elementary_stream;
 #include "build.h"
 #if ENABLE_DVBCSA
 #include <dvbcsa/dvbcsa.h>
+#if DVBCSA_KEY_ECM > 0
+#define dvbcsa_bs_key_set(a,b) dvbcsa_bs_key_set_ecm(csa->csa_ecm,a,b)
+#endif
 #endif
 #include "tvhlog.h"
 
@@ -85,9 +88,4 @@ static inline void tvhcsa_destroy ( tvhcsa_t *csa ) { };
 
 #endif
 
-#if ENABLE_DVBCSA
-typedef void* (*dvbcsa_dl_bs_key_set_type)(const unsigned char ecm, const dvbcsa_cw_t cw, struct dvbcsa_bs_key_s *key);
-void dvbcsa_bs_key_set_wrap(const unsigned char ecm, const dvbcsa_cw_t cw, struct dvbcsa_bs_key_s *key);
-#endif
-
 #endif /* __TVH_CSA_H__ */
