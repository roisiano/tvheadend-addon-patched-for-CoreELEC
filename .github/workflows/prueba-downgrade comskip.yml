name: GitHub Automatic Build

on:
  workflow_dispatch:

jobs:
  build:
    name: coreelec-22-Amlogic-no
    runs-on: ubuntu-22.04

    steps:
      - name: 🔌️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔨️ Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc g++ make git wget zip unzip xz-utils bc curl gperf zip xsltproc \
            xfonts-utils patchutils lzop libxml-parser-perl libparse-yapp-perl \
            openjdk-11-jre-headless rsync rename jq rdfind

      - name: 📥️ Clone CoreELEC
        run: git clone https://github.com/CoreELEC/CoreELEC

      - name: 📌️ Checkout coreelec-22 branch
        run: |
          cd CoreELEC
          git fetch --all
          git checkout coreelec-22

      - name: 🧾 Downgrade Comskip to 0.82.009
        run: |
          sed -i 's|PKG_VERSION=".*"|PKG_VERSION="0.82.009"|' \
            ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/comskip/package.mk
          sed -i 's|PKG_URL=".*"|PKG_URL="https://github.com/erikkaashoek/Comskip/archive/refs/tags/0.82.009.tar.gz"|' \
            ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/comskip/package.mk
          sed -i '/^PKG_SHA256=/d' ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/comskip/package.mk

      - name: ✍️ Update libdvbcsa version manually
        run: |
          sed -i 's|PKG_VERSION=".*"|PKG_VERSION="f25351d70589ec97ae6fb7590786c9aa38b999d4"|' \
            ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/package.mk
          sed -i 's|PKG_SHA256=".*"|PKG_SHA256="807998d0cf33fea4b716f534b9658aa02b185f50e5b143620d58f520b34ce0b7"|' \
            ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/package.mk

      - name: 🔍️ Get build paths
        run: |
          cd ${{ github.workspace }}/CoreELEC
          ARCH=aarch64 PROJECT=Amlogic-ce DEVICE=Amlogic-no . config/options
          echo "sources_dir=${SOURCES}" >> $GITHUB_ENV
          echo "build_dir=${BUILD}" >> $GITHUB_ENV
          echo "project=${DISTRONAME}-${OS_VERSION}" >> $GITHUB_ENV

      - name: 🧪️ Validar y enlazar sources (recursivo)
        run: |
          echo "🔍 Verificando sources manuales y oficiales..."
          mkdir -p missing_sources

          # Enlazar sources manuales si existen
          if [ -d "${{ github.workspace }}/sources" ]; then
            echo "✅ Sources manuales encontradas."
            if [ ! -d "${{ env.sources_dir }}" ]; then
              ln -s "${{ github.workspace }}/sources" "${{ env.sources_dir }}"
              echo "🔗 Sources manuales enlazadas."
            fi

            # Detectar subcarpetas no reconocidas por CoreELEC
            for dir in "${{ github.workspace }}/sources"/*; do
              fname=$(basename "$dir")
              if [ ! -e "${{ env.sources_dir }}/$fname" ]; then
                echo "⚠️ Source no detectada por CoreELEC: $fname"
                cp -r "$dir" missing_sources/
              fi
            done
          else
            echo "❌ No se encontraron sources manuales."
          fi

          # Verificar sources esperadas por CoreELEC
          for pkg in ffmpeg comskip libdvbcsa tvheadend42 tvheadend43; do
            found=$(find "${{ env.sources_dir }}" -type d -iname "*${pkg}*" | wc -l)
            if [ "$found" -eq 0 ]; then
              echo "⚠️ Source esperada no encontrada: $pkg"
              echo "$pkg" > missing_sources/${pkg}.txt
            else
              echo "✅ Source detectada: $pkg"
            fi
          done

      - name: 📤️ Subir sources no detectadas
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: missing-sources
          path: missing_sources/

      - name: 🧱 Compile CoreELEC FFmpeg
        run: |
          cd ${{ github.workspace }}/CoreELEC
          ARCH=aarch64 PROJECT=Amlogic-ce DEVICE=Amlogic-no scripts/build ffmpeg

      - name: 💽️ Cache build sources
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.sources_dir }}
            ${{ env.build_dir }}/.ccache
            ${{ env.build_dir }}/.ccache-local
          key: ${{ env.project }}-Amlogic-no
          restore-keys: ${{ env.project }}-

      - name: 🧱 Ensure patch directories exist
        run: |
          mkdir -p ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend42/patches
          mkdir -p ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend43/patches

      - name: 😮️ Add patches to tvheadend addons
        run: |
          cp ${{ github.workspace }}/patches/tvheadend42.patch \
             ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend42/patches/tvheadend42-100-LS.patch
          cp ${{ github.workspace }}/patches/tvheadend43-newer.patch \
             ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch

      - name: 👷️ Build tvheadend addons
        run: |
          cd ${{ github.workspace }}/CoreELEC
          ARCH=aarch64 PROJECT=Amlogic-ce DEVICE=Amlogic-no scripts/create_addon tvheadend42 tvheadend43

      - name: 🗜️ Compress built addons
        run: |
          cd ${{ github.workspace }}/CoreELEC/target
          zip -rFS9 addons-Amlogic-no.zip addons

      - name: 📤️ Upload compressed addons
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: ${{ github.workspace }}/CoreELEC/target/*.zip

      - name: 📄 Upload build logs if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: ${{ env.build_dir }}/.threads/logs/
          if-no-files-found: warn

