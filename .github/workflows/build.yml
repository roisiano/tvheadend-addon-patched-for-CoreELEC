name: GitHub Automatic Build
on:
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: false
      prerelease:
        description: 'Prerelease'
        required: true
        default: 'false' 
        type: choice
        options:
        - true
        - false

jobs:
  build:
    name: ${{ matrix.tag }} (Amlogic-ng)
    runs-on: ubuntu-20.04
    continue-on-error: true
    strategy:
      matrix:
        tag:
          - "19.5-Matrix"
          - "20.1-Nexus"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install gcc make git unzip wget xz-utils bc gperf zip unzip g++ xsltproc xfonts-utils patchutils lzop libxml-parser-perl libparse-yapp-perl
      - name: Download the CoreELEC
        run: git clone https://github.com/CoreELEC/CoreELEC
      - name: CoreELEC release tags checkout
        run: |
          cd CoreELEC
          git checkout ${{ matrix.tag }}
      - name: Patches adding ...
        run: |
          mkdir -p ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/patches
          cp ${{ github.workspace }}/.github/patches/libdvbcsa.patch ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/patches/libdvbcsa-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend42.patch ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend42/patches/tvheadend42-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend43.patch ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend43.patch ${{ github.workspace }}/CoreELEC/projects/Amlogic-ce/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch
      - name: Building addons
        run: |
          cd ${{ github.workspace }}/CoreELEC && ARCH=arm PROJECT=Amlogic-ce DEVICE=Amlogic-ng scripts/create_addon tvheadend42 tvheadend43
      - name: Upload target
#        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag)
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/CoreELEC/target/
          if-no-files-found: error

  build_ne:
    name: ${{ matrix.tag }} (Amlogic-ne)
    runs-on: ubuntu-20.04
    continue-on-error: true
    strategy:
      matrix:
        tag:
          - "20.1-Nexus"
          - "21.0-Omega"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install gcc make git unzip wget xz-utils bc gperf zip unzip g++ xsltproc xfonts-utils patchutils lzop libxml-parser-perl libparse-yapp-perl
      - name: Download the CoreELEC
        run: git clone https://github.com/CoreELEC/CoreELEC
      - name: CoreELEC release tags checkout
        run: |
          cd CoreELEC
          git checkout ${{ matrix.tag }}
      - name: Patches adding ...
        run: |
          mkdir -p ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/patches
          cp ${{ github.workspace }}/.github/patches/libdvbcsa.patch ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/patches/libdvbcsa-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend42.patch ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend42/patches/tvheadend42-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend43.patch ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend43.patch ${{ github.workspace }}/CoreELEC/projects/Amlogic-ce/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch
      - name: Building addons
        run: |
          cd ${{ github.workspace }}/CoreELEC && ARCH=arm PROJECT=Amlogic-ce DEVICE=Amlogic-ne scripts/create_addon tvheadend42 tvheadend43
      - name: Upload target
#        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag)
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/CoreELEC/target/
          if-no-files-found: error

  build_old:
    name: 9.2.8
    runs-on: ubuntu-20.04
    continue-on-error: true
    strategy:
      matrix:
        project:
          - "Amlogic"
          - "Amlogic-ng"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install gcc make git unzip wget xz-utils bc gperf zip unzip g++ xsltproc xfonts-utils patchutils lzop libxml-parser-perl libparse-yapp-perl rename
      - name: Download the CoreELEC
        run: git clone https://github.com/CoreELEC/CoreELEC
      - name: CoreELEC release tags checkout
        run: |
          cd CoreELEC
          git checkout 9.2.8
      - name: Patches adding ...
        run: |
          mkdir -p ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/patches
          cp ${{ github.workspace }}/.github/patches/libdvbcsa.patch ${{ github.workspace }}/CoreELEC/packages/addons/addon-depends/libdvbcsa/patches/libdvbcsa-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend42.patch ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend42/patches/tvheadend42-100-LS.patch
          cp ${{ github.workspace }}/.github/patches/tvheadend43.patch ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch
      - name: Building addons
        run: |
          cd ${{ github.workspace }}/CoreELEC && ARCH=arm PROJECT=${{ matrix.project }} scripts/create_addon tvheadend42 tvheadend43
          if [ ${{ matrix.project }} == Amlogic ]; then
            find "target" -name "*.zip" -exec rename -v 's/zip/zip-without_ng/' *.zip {} \;
          fi
      - name: Upload target
#        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag)
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/CoreELEC/target/
          if-no-files-found: error

  release:
    needs: [ build, build_ne, build_old ]
    strategy:
      fail-fast: false
    name: Releases
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag)
    runs-on: ubuntu-latest
    steps:
      - name: Download target
        uses: actions/download-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/target
      - name: Generate release tag
        run: |
          if [ ${{ github.event_name }} == 'push' ]; then
             echo "release_tag=${GITHUB_REF#refs/heads/}-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
             echo "prerelease=false" >> $GITHUB_ENV
          else
             echo "release_tag=$(echo "${{ github.event.inputs.tag }}" | sed 's/[^A-Z,a-z,0-9]/-/g')" >> $GITHUB_ENV
             if [ ${{ github.event.inputs.prerelease }} == 'true' ]; then
                echo "prerelease=true" >> $GITHUB_ENV
             else
                echo "prerelease=false" >> $GITHUB_ENV
             fi
          fi
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          name: "GitHub Build"
          tag_name: ${{ env.release_tag }}
          prerelease: ${{ env.prerelease }}
          files: ${{ github.workspace }}/target/*/*/*/*/*/*.zip*
          
