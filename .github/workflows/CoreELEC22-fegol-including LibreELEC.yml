name: GitHub Automatic Build
on:
##  push:
  workflow_dispatch:
jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.device }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - os: CoreELEC
          tags: origin/coreelec-22
          arch: aarch64
          project: Amlogic-ce
          device: Amlogic-no

        - os: LibreELEC.tv
          tags: origin/master
          arch: aarch64
          project: ARM
          device: ARMv8

        - os: LibreELEC.tv
          tags: origin/master
          arch: x86_64
          project: Generic
          device: Generic

    steps:
      - name: 🔌️ Checkout
        uses: actions/checkout@v4
      - name: 🔨️ Install dependencies
        run: sudo apt-get update && sudo apt-get install gcc g++ make git wget zip unzip xz-utils bc curl gperf zip xsltproc xfonts-utils patchutils lzop libxml-parser-perl libparse-yapp-perl openjdk-11-jre-headless rsync rename jq rdfind
      # Set OS without the part after the dot (e.g., LibreELEC.tv => LibreELEC)
      - name: ✂️ Set OS without extension
        run: echo "os=$(echo ${{ matrix.os }} | cut -d '.' -f 1)" >> $GITHUB_ENV
      - name: 📥️ Download the ${{ matrix.os }}
        run: git clone https://github.com/${{ env.os }}/${{ matrix.os }}
      - name: 📌️ ${{ matrix.os }} release tags checkout
        run: |
          cd ${{ matrix.os }}
          git checkout ${{ matrix.tags }}
      - name: 😜️ Update dvbcsa ...
        run: |
          patch -d ${{ github.workspace }}/${{ matrix.os }} -p1 < ${{ github.workspace }}/.github/patches/up-libdvbcsa.patch
      - name: 🔍️ Get path
        run: |
          cd ${{ github.workspace }}/${{ matrix.os }}
          ARCH=${{ matrix.arch }} PROJECT=${{ matrix.project }} DEVICE=${{ matrix.device }} . config/options
          echo "sources_dir=$(echo ${SOURCES})" >> $GITHUB_ENV
          echo "build_dir=$(echo ${BUILD})" >> $GITHUB_ENV
          echo "project=$(echo ${DISTRONAME}-${OS_VERSION})" >> $GITHUB_ENV
      - name: 💽️ Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.sources_dir }}
            ${{ env.build_dir }}/.ccache
            ${{ env.build_dir }}/.ccache-local
          key: ${{ env.project }}-${{ env.os }}-${{ matrix.device }}
          restore-keys: ${{ env.project }}-
      - name: 🤔️ adding sources for download errors...
        run: |
          if [ -d ${{ github.workspace }}/.github/sources ] && [ ! -d ${{ env.sources_dir }} ]; then
            ln -s ${{ github.workspace }}/.github/sources ${{ env.sources_dir }}
          fi
      - name: 😮️ Patches adding ...
        run: |
          cp ${{ github.workspace }}/.github/patches/tvheadend43-newer.patch ${{ github.workspace }}/${{ matrix.os }}/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch
      - name: 👷️ Building addons
        run: cd ${{ github.workspace }}/${{ matrix.os }} && ARCH=${{ matrix.arch }} PROJECT=${{ matrix.project }} DEVICE=${{ matrix.device }} scripts/create_addon tvheadend43
      - name: 📤️ Upload target
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ env.os }}-${{ matrix.device }}
          path: ${{ github.workspace }}/${{ matrix.os }}/target/
          compression-level: 9
