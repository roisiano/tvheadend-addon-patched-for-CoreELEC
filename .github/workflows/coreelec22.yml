name: GitHub Automatic Build

on:
##  push:
  workflow_dispatch:

jobs:
  build:
    name: coreelec-22-Amlogic-no
    runs-on: ubuntu-22.04

    steps:
      - name: 🔌️ Checkout
        uses: actions/checkout@v4

      - name: 🔨️ Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ make git wget zip unzip xz-utils bc curl gperf zip xsltproc xfonts-utils patchutils lzop libxml-parser-perl libparse-yapp-perl openjdk-11-jre-headless rsync rename jq rdfind

      - name: 📥️ Download CoreELEC
        run: git clone https://github.com/CoreELEC/CoreELEC

      - name: 📌️ Checkout coreelec-22 branch
        working-directory: CoreELEC
        run: git checkout coreelec-22

      - name: 📌 Apply libdvbcsa patch
        run: |
          mkdir -p CoreELEC/packages/addons/addon-depends/libdvbcsa/patches
          cp ${{ github.workspace }}/.github/patches/up-libdvbcsa.patch \
             CoreELEC/packages/addons/addon-depends/libdvbcsa/patches/001-up-libdvbcsa.patch

      - name: 🔍️ Extract build paths
        working-directory: CoreELEC
        run: |
          ARCH=aarch64 PROJECT=Amlogic-ce DEVICE=Amlogic-no . config/options
          echo "sources_dir=${SOURCES}" >> $GITHUB_ENV
          echo "build_dir=${BUILD}" >> $GITHUB_ENV
          echo "project=${DISTRONAME}-${OS_VERSION}" >> $GITHUB_ENV

      - name: 💽️ Cache build sources
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.sources_dir }}
            ${{ env.build_dir }}/.ccache
            ${{ env.build_dir }}/.ccache-local
          key: ${{ env.project }}-Amlogic-no
          restore-keys: ${{ env.project }}-

      - name: 🤔️ Add fallback sources if needed
        run: |
          if [ -d ${{ github.workspace }}/.github/sources ] && [ ! -d ${{ env.sources_dir }} ]; then
            ln -s ${{ github.workspace }}/.github/sources ${{ env.sources_dir }}
          fi

      - name: 😮️ Add tvheadend patch
        run: |
          cp ${{ github.workspace }}/.github/patches/tvheadend43-newer.patch \
             ${{ github.workspace }}/CoreELEC/packages/addons/service/tvheadend43/patches/tvheadend43-100-LS.patch

      - name: 👷️ Build tvheadend addon (without comskip)
        working-directory: CoreELEC
        run: |
          ARCH=aarch64 PROJECT=Amlogic-ce DEVICE=Amlogic-no scripts/create_addon tvheadend43 --disable-depends

      - name: 📥 Download official addon
        run: |
          wget https://raw.githubusercontent.com/roisiano/tvheadend-addon-patched-for-CoreELEC/refs/heads/main/.github/sources/service.tvheadend43-22.0.4.3.zip -O addon.zip
          unzip addon.zip -d addon

      - name: 🔁 Replace tvheadend binary
        run: |
          BIN=$(find CoreELEC/build.* -type f -name tvheadend | head -n 1)
          if [ -f "$BIN" ]; then
            cp "$BIN" addon/service.tvheadend43/bin/tvheadend
            chmod +x addon/service.tvheadend43/bin/tvheadend
          else
            echo "❌ Binario tvheadend no encontrado"
            exit 1
          fi

      - name: 📦 Repack patched addon
        run: |
          cd addon
          zip -r ../service.tvheadend43-22.0.4.3-icam.zip service.tvheadend43

      - name: 📤 Upload patched addon
        uses: actions/upload-artifact@v4
        with:
          name: tvheadend43-icam
          path: service.tvheadend43-22.0.4.3-icam.zip

      - name: 📄 Upload build logs
        if: always()
        run: |
          echo "🔍 Buscando logs en directorios de build..."
          LOG_DIR=$(find CoreELEC -type d -path "*/.threads/logs" | head -n 1)
          if [ -n "$LOG_DIR" ]; then
            echo "✅ Logs encontrados en: $LOG_DIR"
            mkdir -p logs-to-upload
            cp -r "$LOG_DIR"/* logs-to-upload/
          else
            echo "⚠️ No se encontraron logs en ningún directorio .threads/logs"
          fi
        continue-on-error: true

      - name: 📤️ Upload logs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: logs-to-upload/
          if-no-files-found: warn


