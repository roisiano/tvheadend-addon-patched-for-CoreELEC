name: Check All Sources Availability

on:
  workflow_dispatch:

jobs:
  check-sources:
    runs-on: ubuntu-22.04
    steps:
      - name: üîå Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üì• Clone CoreELEC
        run: git clone https://github.com/CoreELEC/CoreELEC --branch coreelec-22 --depth 1

      - name: üìå Get build paths
        run: |
          cd CoreELEC
          ARCH=aarch64 PROJECT=Amlogic-ce DEVICE=Amlogic-no . config/options
          echo "sources_dir=${SOURCES}" >> $GITHUB_ENV

      - name: üîç Check all sources recursively
        run: |
          set -e
          cd CoreELEC
          ARCH=aarch64 PROJECT=Amlogic-ce DEVICE=Amlogic-no . config/options

          declare -A VISITED
          QUEUE=("packages/multimedia/ffmpeg/package.mk" "packages/addons/service/tvheadend43/package.mk")

          get_deps() {
            local pkgfile="$1"
            # Evitar duplicados
            if [[ -n "${VISITED[$pkgfile]}" ]]; then
              return
            fi
            VISITED[$pkgfile]=1

            # Cargar package.mk
            source "$pkgfile" || true

            # A√±adir dependencias
            for dep in $PKG_DEPENDS_TARGET; do
              depfile=$(find packages -type f -path "*/$dep/package.mk" | head -n1 || true)
              if [[ -n "$depfile" ]]; then
                QUEUE+=("$depfile")
              fi
            done
          }

          # Construir lista completa de paquetes
          i=0
          while [[ $i -lt ${#QUEUE[@]} ]]; do
            get_deps "${QUEUE[$i]}"
            i=$((i+1))
          done

          echo "üì¶ Paquetes a comprobar:"
          printf '%s\n' "${!VISITED[@]}"

          MISSING=0
          for pkgfile in "${!VISITED[@]}"; do
            source "$pkgfile" || true
            URL=$(eval echo "$PKG_URL")
            FILE=$(basename "$URL")
            NAME=$(basename "$(dirname "$pkgfile")")

            # Si no hay URL, es un paquete virtual o sin fuente ‚Üí lo saltamos
            if [[ -z "$URL" ]]; then
              echo "‚û° $NAME ‚Üí (paquete sin fuente, se omite)"
              continue
            fi

            echo "‚û° $NAME ‚Üí $URL"
            if curl --head --silent --fail "$URL" >/dev/null; then
              echo "   ‚úÖ Disponible online"
            elif [[ -f "${{ github.workspace }}/sources/$FILE" ]]; then
              echo "   ‚úÖ Encontrado en sources locales"
            else
              echo "   ‚ùå NO disponible ‚Üí Paquete: $NAME | URL: $URL"
              MISSING=$((MISSING+1))
            fi
          done

          if [[ $MISSING -gt 0 ]]; then
            echo "‚ùå $MISSING paquete(s) con fuentes no disponibles"
            exit 1
          else
            echo "üéâ Todo OK: todas las fuentes est√°n disponibles"
          fi

